<!DOCTYPE html>
<html>
  <head>
    <base target="_top">
    <style>
      :root { --accent: #8b0000; --muted: #6b7280; }
      body {
        font-family: Inter, system-ui, sans-serif;
        background: #f9fafb;
        margin: 0;
        padding: 20px;
        color: #111827;
      }

      .three-panels {
        display: flex;
        gap: 20px;
        justify-content: center;
      }

      .panel {
        background: white;
        border-radius: 12px;
        padding: 16px;
        box-shadow: 0 6px 12px rgba(15,23,42,0.06);
      }

      .left-panel, .right-panel {
        width: 220px;
      }

      .center-panel {
        width: 800px;
        min-height: 400px;
      }

      .panel-title {
        margin: 0 0 12px 0;
        font-weight: 700;
        color: var(--accent);
        font-size: 18px;
      }

      .panel-divider {
        height: 1px;
        background: #e6e9ef;
        margin: 8px 0 16px 0;
      }

      /* Result cards */
      #results-list {
        display: flex;
        flex-direction: column;
        gap: 12px;
      }

      .result-card {
        background: #ffffff;
        border-radius: 10px;
        padding: 14px 16px;
        box-shadow: 0 1px 4px rgba(0,0,0,0.08);
        display: flex;
        justify-content: space-between;
        align-items: flex-start;
        transition: transform 0.2s ease, box-shadow 0.2s ease;
      }

      .result-card:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(0,0,0,0.12);
      }

      .result-main {
        flex: 1 1 auto;
        margin-right: 12px;
      }

      .result-main b {
        display: block;
        margin-bottom: 4px;
        color: var(--accent);
      }

      .result-right {
        display: flex;
        align-items: center;
        gap: 6px;
      }

      .result-right a {
        color: var(--accent);
        text-decoration: none;
        font-weight: 600;
        font-size: 0.95rem;
      }

      .more-composer-btn {
        background: var(--accent);
        color: #fff;
        border: none;
        border-radius: 6px;
        padding: 4px 8px;
        font-size: 0.75rem;
        font-weight: 600;
        cursor: pointer;
        transition: background 0.2s;
      }

      .more-composer-btn:hover {
        background: #5c0000;
      }

      /* Pagination */
      .pagination {
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 8px;
        margin-top: 20px;
        flex-wrap: wrap;
      }

      .page-btn {
        padding: 6px 12px;
        border-radius: 8px;
        border: 1px solid #e6e9ef;
        background: #fff;
        color: #111827;
        cursor: pointer;
        font-weight: 600;
        transition: background 0.2s;
      }

      .page-btn:hover {
        background: #f3f4f6;
      }

      .page-btn[aria-current="true"] {
        background: var(--accent);
        color: #fff;
        border-color: var(--accent);
      }

      .page-arrow {
        font-weight: 700;
        font-size: 14px;
      }

      /* Composer details */
      #composer-content {
        font-size: 0.95rem;
      }

      #composer-content b {
        color: var(--accent);
      }

      /* Filter styles */
      .filter-group {
        margin-bottom: 16px;
      }

      .filter-group label {
        display: block;
        margin-bottom: 4px;
        font-weight: 600;
      }

      .filter-group select {
        width: 100%;
        padding: 6px 8px;
        border-radius: 6px;
        border: 1px solid #d1d5db;
      }

    </style>
  </head>
  <body>

    <div class="three-panels">
      <!-- Left Panel: Filters -->
      <div class="panel left-panel">
        <h3 class="panel-title">Filters</h3>
        <div class="panel-divider"></div>

        <div class="filter-group">
          <label for="filter-gender">Gender</label>
          <select id="filter-gender" onchange="applyFilters()">
            <option value="">All</option>
            <option value="Male">Male</option>
            <option value="Female">Female</option>
          </select>
        </div>

        <div class="filter-group">
          <label for="filter-decade">Decade</label>
          <select id="filter-decade" onchange="applyFilters()">
            <option value="">All</option>
            <option value="1950s">1950s</option>
            <option value="1960s">1960s</option>
            <option value="1970s">1970s</option>
          </select>
        </div>

        <div class="filter-group">
          <label for="filter-country">Country</label>
          <select id="filter-country" onchange="applyFilters()">
            <option value="">All</option>
            <option value="Russia">Russia</option>
            <option value="Armenia">Armenia</option>
            <option value="Georgia">Georgia</option>
          </select>
        </div>
      </div>

      <!-- Center Panel: Results -->
      <div class="panel center-panel">
        <h3 class="panel-title">Results</h3>
        <div class="panel-divider"></div>

        <div id="results-list">
          <!-- Result cards dynamically inserted here -->
        </div>

        <div class="pagination" id="pagination">
          <!-- Pagination buttons dynamically inserted here -->
        </div>
      </div>

      <!-- Right Panel: Composer Details -->
      <div class="panel right-panel">
        <h3 class="panel-title">Composer Details</h3>
        <div class="panel-divider"></div>
        <div id="composer-content">
          Click a composer for details.
        </div>
      </div>
    </div>

    <script>
      const pageSize = 10;
      let currentPage = 1;
      let allResults = [];
      let filteredResults = [];

      function loadResults(data) {
        allResults = data;
        filteredResults = [...allResults];
        renderPage(currentPage);
      }

      function renderPage(page) {
        const start = (page - 1) * pageSize;
        const end = start + pageSize;
        const pageData = filteredResults.slice(start, end);

        const resultsList = document.getElementById('results-list');
        resultsList.innerHTML = '';

        pageData.forEach(row => {
          const card = document.createElement('div');
          card.className = 'result-card';
          card.innerHTML = `
            <div class="result-main">
              <b>${row.A}</b>
              ${row.J} (${row.K})
            </div>
            <div class="result-right">
              <a href="#">View</a>
              <button class="more-composer-btn" onclick="filterByComposer('${row.A}')">
                More from this composer
              </button>
            </div>
          `;
          resultsList.appendChild(card);
        });

        renderPagination();
      }

      function renderPagination() {
        const pagination = document.getElementById('pagination');
        pagination.innerHTML = '';

        const totalPages = Math.ceil(filteredResults.length / pageSize);

        const prevBtn = document.createElement('button');
        prevBtn.className = 'page-btn page-arrow';
        prevBtn.innerHTML = '&lt;';
        prevBtn.disabled = currentPage === 1;
        prevBtn.onclick = () => { currentPage--; renderPage(currentPage); };
        pagination.appendChild(prevBtn);

        for (let i = 1; i <= totalPages; i++) {
          const btn = document.createElement('button');
          btn.className = 'page-btn';
          btn.innerText = i;
          if (i === currentPage) btn.setAttribute('aria-current', 'true');
          btn.onclick = () => { currentPage = i; renderPage(currentPage); };
          pagination.appendChild(btn);
        }

        const nextBtn = document.createElement('button');
        nextBtn.className = 'page-btn page-arrow';
        nextBtn.innerHTML = '&gt;';
        nextBtn.disabled = currentPage === totalPages;
        nextBtn.onclick = () => { currentPage++; renderPage(currentPage); };
        pagination.appendChild(nextBtn);
      }

      function filterByComposer(composerName) {
        filteredResults = allResults.filter(r => r.A === composerName);
        currentPage = 1;
        renderPage(currentPage);
      }

      function applyFilters() {
        const gender = document.getElementById('filter-gender').value;
        const decade = document.getElementById('filter-decade').value;
        const country = document.getElementById('filter-country').value;

        filteredResults = allResults.filter(r => {
          return (!gender || r.Gender === gender)
              && (!decade || r.Decade === decade)
              && (!country || r.Country === country);
        });

        currentPage = 1;
        renderPage(currentPage);
      }

      // Load data from Apps Script server
      google.script.run.withSuccessHandler(loadResults).getComposerData();
    </script>

  </body>
</html>
